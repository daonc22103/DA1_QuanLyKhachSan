/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.asmduan1;

import com.QLKhachSan.dao.QLDatPhong;
import com.QLKhachSan.entity.DatPhong;
import com.QLKhachSan.entity.Phong;
import com.QLKhachSan.dao.QLPhong;
import com.QLKhachSan.utils.XJdbc;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class QuanLyDatPhong extends javax.swing.JFrame {
    private QLDatPhong qldp = new QLDatPhong();
    private DatPhong dp = new DatPhong();
    private XJdbc xJdbc = new XJdbc();
    private DefaultTableModel defaultTableModel = new DefaultTableModel();
    private ArrayList<DatPhong> arrDP = new ArrayList<>();
    private ArrayList<Phong> arrP = new ArrayList<>();
    private QuanLiPhong qlp = new QuanLiPhong();

    /**
     * Creates new form QuanLyDatPhong
     */
    public QuanLyDatPhong() {
        initComponents();
        fillTableQLDatPhong();
        fillTableQLPhong();
    }

    public void fillTableQLPhong() {
        arrP = QLPhong.getAllPhong();
//    System.out.println("Dữ liệu nhận được từ getAllPhong:");
//    for (Phong phong : arrP) {
//        System.out.println(phong.toString()); // Đảm bảo phương thức toString() được định nghĩa trong lớp Phong
//    }

        DefaultTableModel defaultTableModel = (DefaultTableModel) tbl_QLPhong.getModel();
        defaultTableModel.setRowCount(0);
        for (Phong phong : arrP) {
            defaultTableModel.addRow(phong.toObjectQLP());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_MaPhong = new javax.swing.JTextField();
        txt_MaKH = new javax.swing.JTextField();
        txt_SoNguoi = new javax.swing.JTextField();
        txt_Gia = new javax.swing.JTextField();
        txt_NgayDen = new javax.swing.JTextField();
        txt_NgayDi = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_MaDatPhong = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_QLPhong = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_QLDatPhong = new javax.swing.JTable();
        btn_Thoat = new javax.swing.JButton();
        btn_LamMoi = new javax.swing.JButton();
        btn_DatPhong = new javax.swing.JButton();
        btn_HuyDP = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Phiếu Đặt Phòng"));
        jPanel1.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("ĐẶT PHÒNG");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Mã Phòng:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Mã Khách Hàng:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Số Người:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Giá Phòng:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Ngày Nhận Phòng:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Ngày Trả Phòng:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Mã Đặt Phòng:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_NgayDi)
                    .addComponent(txt_NgayDen)
                    .addComponent(txt_Gia)
                    .addComponent(txt_SoNguoi)
                    .addComponent(txt_MaPhong)
                    .addComponent(txt_MaKH, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(txt_MaDatPhong, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_MaDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_MaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_SoNguoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_Gia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_NgayDen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_NgayDi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Các Loại Phòng"));
        jPanel2.setToolTipText("");

        tbl_QLPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Phòng", "Số Phòng", "Giá Phòng", "Loại Phòng", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_QLPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_QLPhongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_QLPhong);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Các Loại Phòng"));

        tbl_QLDatPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Đặt Phòng", "Mã Phòng", "Mã Khách Hàng", "Số Người", "Giá Phòng", "Ngày Nhận Phòng", "Ngày Trả Phòng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_QLDatPhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_QLDatPhongMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_QLDatPhong);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_Thoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Exit.png"))); // NOI18N
        btn_Thoat.setText("Thoát");
        btn_Thoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThoatActionPerformed(evt);
            }
        });

        btn_LamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Refresh.png"))); // NOI18N
        btn_LamMoi.setText("Làm Mới");
        btn_LamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LamMoiActionPerformed(evt);
            }
        });

        btn_DatPhong.setText("Đặt Phòng");
        btn_DatPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DatPhongActionPerformed(evt);
            }
        });

        btn_HuyDP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete.png"))); // NOI18N
        btn_HuyDP.setText("Hủy DP");
        btn_HuyDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_HuyDPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_LamMoi)
                                .addGap(18, 18, 18)
                                .addComponent(btn_Thoat))
                            .addComponent(btn_DatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btn_HuyDP)
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_DatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Thoat)
                            .addComponent(btn_LamMoi)
                            .addComponent(btn_HuyDP))
                        .addGap(95, 95, 95))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel2.getAccessibleContext().setAccessibleName("Các Loại Phòng\n");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThoatActionPerformed
        hide();
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_ThoatActionPerformed

    private void btn_DatPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DatPhongActionPerformed
        themDatPhong();
    }//GEN-LAST:event_btn_DatPhongActionPerformed

    private void tbl_QLPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_QLPhongMouseClicked
        int index = tbl_QLPhong.getSelectedRow();
        if (index >= 0 && index < arrP.size()) {
            Phong selectedPhong = arrP.get(index);
            fillFromTableQLPhong(selectedPhong);
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn phòng nào.");
        };
    }//GEN-LAST:event_tbl_QLPhongMouseClicked

    private void btn_LamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LamMoiActionPerformed
        lamMoiFromQLDatPhong();
    }//GEN-LAST:event_btn_LamMoiActionPerformed

    private void btn_HuyDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_HuyDPActionPerformed
        String maDP = txt_MaDatPhong.getText();
        huyDatPhong(maDP);
    }//GEN-LAST:event_btn_HuyDPActionPerformed

    private void tbl_QLDatPhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_QLDatPhongMouseClicked
        int index = tbl_QLDatPhong.getSelectedRow();
        if (index >= 0 && index < arrDP.size()) {
            DatPhong selectedDatPhong = arrDP.get(index);
            fillFromTableQLDatPhong(selectedDatPhong);
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn phòng nào.");
        };
    }//GEN-LAST:event_tbl_QLDatPhongMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyDatPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyDatPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyDatPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyDatPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyDatPhong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_DatPhong;
    private javax.swing.JButton btn_HuyDP;
    private javax.swing.JButton btn_LamMoi;
    private javax.swing.JButton btn_Thoat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_QLDatPhong;
    private javax.swing.JTable tbl_QLPhong;
    private javax.swing.JTextField txt_Gia;
    private javax.swing.JTextField txt_MaDatPhong;
    private javax.swing.JTextField txt_MaKH;
    private javax.swing.JTextField txt_MaPhong;
    private javax.swing.JTextField txt_NgayDen;
    private javax.swing.JTextField txt_NgayDi;
    private javax.swing.JTextField txt_SoNguoi;
    // End of variables declaration//GEN-END:variables
    public void fillTableQLDatPhong() {
        arrDP = qldp.getAllDatPhong();
        defaultTableModel = (DefaultTableModel) tbl_QLDatPhong.getModel();
        defaultTableModel.setRowCount(0);
        for (DatPhong list : arrDP) {
            defaultTableModel.addRow(list.toObjectQLDP());
        }
    }

    public void lamMoiFromQLDatPhong() {
        txt_MaDatPhong.setText("");
        txt_MaPhong.setText("");
        txt_MaKH.setText("");
        txt_SoNguoi.setText("");
        txt_Gia.setText("");
        txt_NgayDen.setText("");
        txt_NgayDi.setText("");

    }

    public DatPhong readFromQLDatPhong() {
        String maDatPhong = txt_MaDatPhong.getText();
        String maPhong = txt_MaPhong.getText();
        String maKH = txt_MaKH.getText();
        int soNguoi = Integer.parseInt(txt_SoNguoi.getText());
        float giaPhong = Float.parseFloat(txt_Gia.getText());
        String ngayNP = txt_NgayDen.getText();
        String ngayTP = txt_NgayDi.getText();
        return new DatPhong(maDatPhong, maPhong, maKH, soNguoi, giaPhong, ngayNP, ngayTP);
    }

    public void fillFromTableQLDatPhong(DatPhong datPhong) {
        txt_MaDatPhong.setText(datPhong.getMaDP());
        txt_MaPhong.setText(datPhong.getMaPhong());
        txt_MaKH.setText(datPhong.getMaKH());
        txt_SoNguoi.setText(String.valueOf(datPhong.getSoNguoi()));
        txt_Gia.setText(String.valueOf(datPhong.getGiaPhong()));
        txt_NgayDen.setText(datPhong.getNgayNP());
        txt_NgayDi.setText(datPhong.getNgayTP());
    }

    public void fillFromTableQLPhong(Phong phong) {
        txt_MaPhong.setText(phong.getMaPhong());
        txt_Gia.setText(String.valueOf(phong.getGiaPhong()));
    }

    private boolean validateForm() {
        if (txt_MaPhong.getText().isEmpty() || txt_MaKH.getText().isEmpty()
                || txt_SoNguoi.getText().isEmpty() || txt_Gia.getText().isEmpty()
                || txt_NgayDen.getText().isEmpty() || txt_NgayDi.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.");
            return false;
        }

        // Kiểm tra số người
        try {
            int soNguoi = Integer.parseInt(txt_SoNguoi.getText());
            if (soNguoi <= 0) {
                JOptionPane.showMessageDialog(this, "Số người phải lớn hơn 0.");
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số người phải là số.");
            return false;
        }

        // Kiểm tra giá phòng
        try {
            float gia = Float.parseFloat(txt_Gia.getText());
            if (gia <= 0) {
                JOptionPane.showMessageDialog(this, "Giá phòng phải lớn hơn 0.");
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá phòng phải là số.");
            return false;
        }

        // Kiểm tra định dạng và hợp lệ của ngày tháng
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate today = LocalDate.now();

        LocalDate ngayDen;
        LocalDate ngayDi;

        try {
            ngayDen = LocalDate.parse(txt_NgayDen.getText(), formatter);
            ngayDi = LocalDate.parse(txt_NgayDi.getText(), formatter);
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Ngày đến và ngày đi phải có định dạng yyyy-MM-dd.");
            return false;
        }

        // Check if dates are in the past
        if (ngayDen.isBefore(today) || ngayDi.isBefore(today)) {
            JOptionPane.showMessageDialog(this, "Ngày đến và ngày đi không thể ở trong quá khứ.");
            return false;
        }

        // Check if the departure date is before the arrival date
        if (ngayDi.isBefore(ngayDen)) {
            JOptionPane.showMessageDialog(this, "Ngày đi không thể trước ngày đến.");
            return false;
        }

        return true;
    }

    private void themDatPhong() {
        try {
            if (validateForm()) {
                DatPhong datPhong = readFromQLDatPhong();
                QLPhong qlPhong = new QLPhong();
                String maPhong = datPhong.getMaPhong();
                String currentStatus = qlPhong.getRoomStatus(maPhong);

                // Check the current status of the room
                switch (currentStatus) {
                    case "Đang sử dụng":
                        showErrorMessage("Phòng hiện đang sử dụng. Không thể đặt phòng.");
                        return;
                    case "Đang bảo trì":
                        showErrorMessage("Phòng hiện đang bảo trì. Không thể đặt phòng.");
                        return;
                    case "Đang dọn dẹp":
                        showErrorMessage("Phòng hiện đang dọn dẹp. Không thể đặt phòng.");
                        return;
                    case "Trống":
                        // Proceed with adding the booking and updating the room status
                        qldp.addDatPhong(datPhong);
                        qlPhong.updateRoomStatus(maPhong, "Đang sử dụng");

                        JOptionPane.showMessageDialog(this, "Đặt phòng thành công!");
                        fillTableQLDatPhong();
                        lamMoiFromQLDatPhong();
                        fillTableQLPhong();
                        return;
                    default:
                        showErrorMessage("Trạng thái phòng không hợp lệ.");
                        return;
                }
            } else {
                showErrorMessage("Đặt phòng thất bại. Vui lòng thử lại.");
            }
        } catch (Exception e) {
            showErrorMessage("Lỗi khi thêm dữ liệu: " + e.getMessage());
        }
    }

    private void showErrorMessage(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }

    public void huyDatPhong(String maDatPhong) {
        try {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn hủy đặt phòng này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                DatPhong datPhong = readFromQLDatPhong();
                qldp.DeleteDatPhong(maDatPhong);

                String maPhong = datPhong.getMaPhong();
                QLPhong qlPhong = new QLPhong();
                qlPhong.updateRoomStatus(maPhong, "Trống");
                JOptionPane.showMessageDialog(this, "hủy đặt phòng thành công");
                fillTableQLDatPhong();
                lamMoiFromQLDatPhong();
                fillTableQLPhong();
            } else {
                JOptionPane.showMessageDialog(this, "hủy đặt phòng thất bại ");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm dữ liệu: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
