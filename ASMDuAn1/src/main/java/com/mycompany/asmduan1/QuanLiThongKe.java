/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.asmduan1;

import com.QLKhachSan.utils.XJdbc;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author THIS PC
 */
public class QuanLiThongKe extends javax.swing.JFrame {

    private DefaultTableModel dtm = new DefaultTableModel();

    /**
     * Creates new form Quan
     */
    public QuanLiThongKe() {
        initComponents();
        fillTableQLTKDatPhong();
        fillTableQLTKKhachHang();
        fillTableQLTKNhanVien();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_TKDatPhong = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_TKKhachHang = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_QLTKNhanVien = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        jFormattedTextField1.setText("jFormattedTextField1");

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_TKDatPhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "THÁNG", "NĂM ", "TỔNG SỐ ĐẶT PHÒNG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_TKDatPhong);

        jTabbedPane1.addTab("ĐẶT PHÒNG", jScrollPane1);

        tbl_TKKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "NHÓM TUỔI ", "SỐ LƯỢNG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_TKKhachHang);

        jTabbedPane1.addTab("KHÁCH HÀNG", jScrollPane2);

        tbl_QLTKNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CHỨC VỤ", "SỐ LƯỢNG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbl_QLTKNhanVien);

        jTabbedPane1.addTab("NHÂN  VIÊN", jScrollPane3);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 255));
        jLabel9.setText("TỔNG HỢP THỐNG KÊ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(230, 230, 230))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLiThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLiThongKe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JTable tbl_QLTKNhanVien;
    private javax.swing.JTable tbl_TKDatPhong;
    private javax.swing.JTable tbl_TKKhachHang;
    // End of variables declaration//GEN-END:variables
     public void fillTableQLTKDatPhong() {
        String sql = "SELECT Thang, Nam, TongSoDatPhong FROM VIEW_THONGKE_DATPHONG";
        String[] columnNames = {"Tháng", "Năm", "Tổng Số Đặt Phòng"};

        // Khởi tạo DefaultTableModel với các tiêu đề cột
        DefaultTableModel defaultTableModel = new DefaultTableModel(columnNames, 0);
        tbl_TKDatPhong.setModel(defaultTableModel);

        try (
                Connection conn = XJdbc.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {
                int thang = rs.getInt("Thang");
                int nam = rs.getInt("Nam");
                int tongSoDatPhong = rs.getInt("TongSoDatPhong");

                // Thêm dòng vào DefaultTableModel
                Object[] rowData = {thang, nam, tongSoDatPhong};
                defaultTableModel.addRow(rowData);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void fillTableQLTKKhachHang() {
        String sql = "SELECT NhomTuoi, SoLuong FROM VIEW_THONGKE_THONGKE_KHACHHANG";
        String[] columnNames = {"Nhóm Tuổi", "Số Lượng"};

        // Khởi tạo DefaultTableModel với các tiêu đề cột
        DefaultTableModel defaultTableModel = new DefaultTableModel(columnNames, 0);
        tbl_TKKhachHang.setModel(defaultTableModel);

        try (
                Connection conn = XJdbc.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {
                String nhomTuoi = rs.getString("NhomTuoi");
                int soLuong = rs.getInt("SoLuong");

                // Thêm dòng vào DefaultTableModel
                Object[] rowData = {nhomTuoi, soLuong};
                defaultTableModel.addRow(rowData);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void fillTableQLTKNhanVien() {
        // Câu lệnh SQL để truy vấn dữ liệu từ view VIEW_PHANBO_CHUCVU
        String sql = "SELECT ChucVu, SoLuong FROM VIEW_PHANBO_CHUCVU";
        String[] columnNames = {"Chức Vụ", "Số Lượng"};

        // Khởi tạo DefaultTableModel với các tiêu đề cột
        DefaultTableModel defaultTableModel = new DefaultTableModel(columnNames, 0);
        tbl_QLTKNhanVien.setModel(defaultTableModel);

        try (
                Connection conn = XJdbc.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {

            // Duyệt qua các bản ghi trong ResultSet
            while (rs.next()) {
                String chucVu = rs.getString("ChucVu");
                int soLuong = rs.getInt("SoLuong");

                // Thêm dòng vào DefaultTableModel
                Object[] rowData = {chucVu, soLuong};
                defaultTableModel.addRow(rowData);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
